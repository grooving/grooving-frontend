{"remainingRequest":"/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/thread-loader/dist/cjs.js!/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/babel-loader/lib/index.js!/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/practica/Desarrollo/Workspace/grooving-frontend/src/security/GSecurity.js","dependencies":[{"path":"/home/practica/Desarrollo/Workspace/grooving-frontend/src/security/GSecurity.js","mtime":1553895535188},{"path":"/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport _classCallCheck from \"/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/practica/Desarrollo/Workspace/grooving-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport endpoints from '../utils/endpoints.js';\nimport GAxios from '../utils/GAxios.js';\nvar ROLES = ['ANONYMOUS', 'ARTIST', 'CUSTOMER'];\n\nvar GSecurity =\n/*#__PURE__*/\nfunction () {\n  function GSecurity() {\n    var username = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'anonymous';\n    var role = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'anonymous';\n    var token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n    _classCallCheck(this, GSecurity);\n\n    this._username = username;\n\n    if (role != undefined && ROLES.includes(role.toUpperCase())) {\n      this._role = role.toUpperCase();\n    }\n\n    this._token = token;\n    this._photo = '';\n    this._id = '';\n    this._firstName = '';\n  } // Getters\n\n\n  _createClass(GSecurity, [{\n    key: \"getUsername\",\n    value: function getUsername() {\n      return this._username;\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this._id;\n    }\n  }, {\n    key: \"getRole\",\n    value: function getRole() {\n      return this._role;\n    }\n  }, {\n    key: \"getPhoto\",\n    value: function getPhoto() {\n      return this._photo;\n    }\n  }, {\n    key: \"getFirstName\",\n    value: function getFirstName() {\n      return this._firstName;\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return this._token;\n    } // Other Business Methods\n\n  }, {\n    key: \"obtainSavedCredentials\",\n    value: function obtainSavedCredentials() {\n      if (localStorage.getItem('token') !== undefined) {\n        // There are items in session to be restored...\n        this._token = localStorage.getItem(\"token\");\n        this._username = localStorage.getItem(\"username\");\n        this._firstName = localStorage.getItem(\"firstName\");\n        this._role = localStorage.getItem(\"role\");\n        this._photo = localStorage.getItem(\"photo\");\n        this._id = localStorage.getItem(\"id\");\n      }\n    }\n  }, {\n    key: \"saveCredentialsInCache\",\n    value: function saveCredentialsInCache() {\n      window.localStorage.setItem(\"username\", this.getUsername());\n      window.localStorage.setItem(\"role\", this.getRole());\n      window.localStorage.setItem(\"id\", this.getId());\n      window.localStorage.setItem(\"photo\", this.getPhoto());\n      window.localStorage.setItem(\"firstName\", this.getFirstName());\n      window.localStorage.setItem(\"token\", this.getToken());\n    }\n  }, {\n    key: \"deleteCredentialsInCache\",\n    value: function deleteCredentialsInCache() {\n      window.localStorage.clear();\n    }\n  }, {\n    key: \"authenticate\",\n    value: function authenticate(username, password) {\n      var _this = this;\n\n      var res = false;\n      GAxios.post(endpoints.login, {\n        \"username\": username,\n        \"password\": password\n      }).then(function (response) {\n        console.log(response);\n\n        if (response.data.artist != undefined) {\n          _this._username = response.data.artist.user.username;\n          _this._role = 'ARTIST';\n          _this._id = response.data.artist.id;\n          _this._photo = response.data.artist.photo;\n          _this._firstName = response.data.artist.user.first_name;\n        } else {\n          _this._username = response.data.customer.user.username;\n          _this._role = 'CUSTOMER';\n          _this._id = response.data.customer.id;\n          _this._photo = response.data.customer.photo;\n          _this._firstName = response.data.customer.user.first_name;\n        }\n\n        _this._token = response.headers['x-auth'];\n\n        _this.saveCredentialsInCache();\n\n        res = true;\n      }).catch(function (ex) {\n        console.log(ex);\n        res = false;\n      });\n      return res;\n    }\n  }, {\n    key: \"deauthenticate\",\n    value: function deauthenticate() {\n      this._username = 'anonymous';\n      this._role = 'ANONYMOUS';\n      this._token = '';\n      this._firstName = '';\n      this._id = '';\n      this._photo = '';\n      this.deleteCredentialsInCache();\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return this._token != undefined && this._token.length > 0;\n    }\n  }, {\n    key: \"isAnonymous\",\n    value: function isAnonymous() {\n      return this._token != undefined && this._token.length <= 0;\n    }\n  }, {\n    key: \"hasRole\",\n    value: function hasRole(role) {\n      if (role != undefined && this._role != null && ROLES.includes(role.toUpperCase())) {\n        return this._role.toUpperCase() === role.toUpperCase();\n      } else return false;\n    }\n  }, {\n    key: \"setRole\",\n    value: function setRole(role) {\n      console.log('Debug only... Remove this method');\n\n      if (role != undefined && ROLES.includes(role.toUpperCase())) {\n        this._role = role;\n        return true;\n      } else return false;\n    }\n  }]);\n\n  return GSecurity;\n}();\n\nvar instance = new GSecurity();\nexport default instance;",{"version":3,"sources":["/home/practica/Desarrollo/Workspace/grooving-frontend/src/security/GSecurity.js"],"names":["endpoints","GAxios","ROLES","GSecurity","username","role","token","_username","undefined","includes","toUpperCase","_role","_token","_photo","_id","_firstName","localStorage","getItem","window","setItem","getUsername","getRole","getId","getPhoto","getFirstName","getToken","clear","password","res","post","login","then","response","console","log","data","artist","user","id","photo","first_name","customer","headers","saveCredentialsInCache","catch","ex","deleteCredentialsInCache","length","instance"],"mappings":"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","sourcesContent":["import endpoints from '../utils/endpoints.js';\nimport GAxios from '../utils/GAxios.js'\n\nconst ROLES = ['ANONYMOUS', 'ARTIST', 'CUSTOMER'];\n\nclass GSecurity {\n\n    constructor(username = 'anonymous', role = 'anonymous', token = ''){\n      \n      this._username = username;\n      \n      if (role != undefined && ROLES.includes(role.toUpperCase())){\n          this._role = role.toUpperCase();\n      }\n\n      this._token = token;\n      this._photo = '';\n      this._id = '';\n      this._firstName = '';\n\n    }\n\n    // Getters\n\n    getUsername(){\n        return this._username;\n    }\n\n    getId(){\n        return this._id;\n    }\n\n    getRole(){\n        return this._role;\n    }\n\n    getPhoto() {\n        return this._photo;\n    }\n\n    getFirstName() {\n        return this._firstName;\n    }\n\n    getToken() {\n        return this._token;\n    }\n\n    // Other Business Methods\n\n    obtainSavedCredentials(){\n        if(localStorage.getItem('token') !== undefined){\n            // There are items in session to be restored...\n\n            this._token = localStorage.getItem(\"token\");\n            this._username = localStorage.getItem(\"username\");\n            this._firstName = localStorage.getItem(\"firstName\");\n            this._role = localStorage.getItem(\"role\");\n            this._photo = localStorage.getItem(\"photo\");\n            this._id = localStorage.getItem(\"id\");\n        }\n    }\n\n    saveCredentialsInCache(){\n        window.localStorage.setItem(\"username\",this.getUsername());\n        window.localStorage.setItem(\"role\",this.getRole());\n        window.localStorage.setItem(\"id\",this.getId());\n        window.localStorage.setItem(\"photo\",this.getPhoto());\n        window.localStorage.setItem(\"firstName\",this.getFirstName());\n        window.localStorage.setItem(\"token\",this.getToken());\n    }\n\n    deleteCredentialsInCache(){\n        window.localStorage.clear();\n    }\n  \n    authenticate(username, password){\n\n        var res = false;\n\n        GAxios.post(endpoints.login, {\n            \"username\": username,\n            \"password\": password\n          }).then(response => {\n\n            console.log(response)\n        \n                if(response.data.artist != undefined){\n                    this._username = response.data.artist.user.username;\n                    this._role = 'ARTIST';\n                    this._id = response.data.artist.id;\n                    this._photo = response.data.artist.photo;\n                    this._firstName = response.data.artist.user.first_name;\n                }else{\n                    this._username = response.data.customer.user.username;\n                    this._role = 'CUSTOMER';\n                    this._id = response.data.customer.id;\n                    this._photo = response.data.customer.photo;\n                    this._firstName = response.data.customer.user.first_name;\n                }\n\n                this._token = response.headers['x-auth'];\n\n                this.saveCredentialsInCache();\n\n                res = true;\n\n              }).catch(ex => {\n                console.log(ex);\n                res = false;\n              });\n\n        return res;\n    }\n\n    deauthenticate(){\n        this._username = 'anonymous';\n        this._role = 'ANONYMOUS';\n        this._token = '';\n        this._firstName = '';\n        this._id = '';\n        this._photo = '';\n\n        this.deleteCredentialsInCache();\n    }\n\n    isAuthenticated(){\n        return this._token != undefined && this._token.length > 0;\n    }\n\n    isAnonymous(){\n        return this._token != undefined && this._token.length <= 0;\n    }\n    \n    hasRole(role){\n\n        if(role != undefined && this._role != null && ROLES.includes(role.toUpperCase())){\n            return this._role.toUpperCase() === role.toUpperCase();\n        }\n        else\n            return false;\n    }\n\n    setRole(role){\n        console.log('Debug only... Remove this method')\n        if(role != undefined && ROLES.includes(role.toUpperCase())){\n            this._role = role;\n            return true;\n        }\n        else\n            return false;\n    }\n\n  }\n  \n  const instance = new GSecurity();\n  export default instance;"]}]}